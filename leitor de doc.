{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyOZY7T5Y27duzYcime0h8zu",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/KaiqueCasagrand/leitor_de_doc/blob/main/leitor%20de%20doc.\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Instalando SDK\n"
      ],
      "metadata": {
        "id": "3EJHnmv0axce"
      }
    },
    {
      "cell_type": "code",
      "execution_count": 2,
      "metadata": {
        "id": "WhzSU5EyaCUy"
      },
      "outputs": [],
      "source": [
        "!pip install -U -q google-generativeai"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Importando ferramentas?"
      ],
      "metadata": {
        "id": "x67A_uj3a26Y"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "import pandas as pd\n",
        "import google.generativeai as genai\n",
        "\n",
        "GOOGLE_API_KEY=\"AIzaSyBMunBiGLVEA3tq9saL0F6rEAl4jbyEfsk\"\n",
        "genai.configure(api_key=GOOGLE_API_KEY)"
      ],
      "metadata": {
        "id": "H0VyA-OOaVmV"
      },
      "execution_count": 4,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "for m in genai.list_models():\n",
        "  if 'embedContent' in m.supported_generation_methods:\n",
        "    print(m.name)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 52
        },
        "id": "06CTyKTFbd5k",
        "outputId": "05b7c330-1a04-4933-9ede-7c2d6ab95c21"
      },
      "execution_count": 6,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "models/embedding-001\n",
            "models/text-embedding-004\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "title = \"A próxima geração de IA para desenvolvedores e Google Workspace\"\n",
        "sample_text = (\"Título: A próxima geração de IA para desenvolvedores e Google Workspace\"\n",
        "  \"\\n\"\n",
        "  \"Artigo completo:\\n\"\n",
        "  \"\\n\"\n",
        "  \"Gemini API & Google AI Studio: Uma maneira acessivel de explorar e criar protótipos com aplicações de IA generativa\")\n",
        "\n",
        "embeddings = genai.embed_content(model=\"models/embedding-001\",\n",
        "                                 content=sample_text,\n",
        "                                 title=title,\n",
        "                                 task_type=\"RETRIEVAL_DOCUMENT\")\n",
        "\n",
        "print(embeddings)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 54
        },
        "id": "T3k-_7Stf_X2",
        "outputId": "b5083e71-f749-4d91-a96f-d9e57e44ef56"
      },
      "execution_count": 8,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "{'embedding': [0.0512451, -0.036198843, -0.019158708, 0.019573186, 0.06742889, -0.0052685305, -0.02767586, -0.018914977, 0.06220338, 0.06257593, 0.011453855, 0.013132725, -0.046880096, -0.021972213, 0.009486085, -0.026625467, 0.022598978, -0.012096425, -0.034788493, -0.0011314827, 0.007497891, 0.0059401016, -0.029543951, -0.06606445, -0.020090975, 0.02098767, 0.015545649, -0.037946403, -0.03326899, 0.02681229, -0.049690086, 0.049942255, -0.033831, 0.010327337, -0.035956822, -0.040874034, -0.026168479, -0.04471691, -0.0021545717, -0.0033930347, 0.0056297192, -0.08592187, -0.010266354, 0.026619304, -0.0033729204, -0.02107747, 0.044365887, 0.04377648, 0.014638021, -0.05903468, 0.026893962, 0.022291362, 0.06483139, -0.04236089, -0.0048635313, -0.009288106, 0.023343146, -0.033797406, 0.024214797, -0.0003407756, -0.0009546803, 0.023094537, -0.016091159, 0.05340161, 0.018512271, -0.0583988, -0.04219819, -1.6810434e-05, 0.011712833, 0.048436727, 0.0098303985, 0.013133031, 0.061246675, -0.06364897, -0.03985238, -0.11259143, -0.04219607, 0.040442567, -0.007814794, 0.017629059, 0.018333143, -0.080760814, -0.051252242, -0.040772837, -0.019147707, 0.03698771, -0.055593707, -0.023476167, 0.046282906, 0.0018002677, 0.015350426, -0.037332684, 0.05345248, -0.04659009, -0.004150673, 0.08643837, -0.060021877, -0.017990848, -0.0061609326, -0.083781675, -0.017107349, 0.00015008911, -0.054455217, 0.010891683, 0.02140773, 0.037360184, -0.018286131, 0.015495997, -0.04870739, 0.107410945, -0.0303754, -0.009821469, 0.024402713, -0.061353132, 0.04373073, -0.02018629, 0.017653769, 0.043126043, -0.0006000852, 0.0515502, 0.047500927, 0.027017618, 0.038446154, -0.00073755375, -0.04291198, 0.026837781, -0.040337387, 0.018587243, 0.059420303, 0.03770556, 0.015047025, -0.049759604, -0.032376006, 0.0470267, 0.0417687, 0.044335, 0.019061198, -0.017823158, 0.044414576, 0.06370128, -0.005875785, 0.04468164, -0.0075172912, -0.0144438865, -0.0015325238, 0.08567463, -0.07832739, -0.010358397, 0.03230802, -0.0041451887, -0.039135765, 0.007643283, -0.08419543, 0.05855856, 0.041684933, 0.023718083, -0.03504339, 0.061671123, 0.024941862, 0.0126542095, 0.03863125, -0.009993759, 0.0033635143, 0.0061070602, -0.022118436, -0.02293705, -0.011839207, 0.01053788, 0.020024091, 0.038683634, 0.008138528, 0.010250072, -0.036675908, -0.056061517, -0.0074362936, -0.032647483, 0.00519786, -0.005562224, -0.03859585, 0.017463977, -0.036050405, -0.060515504, 0.040825505, 0.02630989, 0.0056269504, -0.02729919, 0.045660917, -0.024061937, -0.07557025, 0.038598362, -0.0064911367, -0.028080735, -0.015695011, 0.008554723, -0.029618956, 0.038771007, 0.020645795, 0.025365366, 0.008626099, -0.022548508, 0.0009904362, 0.06914152, 0.040003493, 0.0070789433, -0.0015546932, 0.045153525, 0.08188437, -0.017955506, -0.036168598, 0.03274176, -0.038865075, 0.0025613182, 0.024499452, 0.036390636, 0.02184625, -0.018849451, -0.0039019752, -0.0071951062, -0.032609027, -0.043047562, -0.019393174, -0.006650598, -0.03351071, -0.01765451, -0.031326585, 0.07140295, -0.05892736, 0.05917658, 0.04388471, -0.073183164, 0.012177881, 0.064670704, 0.06609027, -0.0021386084, 0.04756795, 0.014992329, 0.008156391, 0.016320344, 0.033946898, 0.04733635, -0.031716987, 0.058497418, 0.0441079, 0.040633067, -0.05299662, 0.003928572, 0.009848607, 0.053046204, 0.0006746057, 0.038509328, -0.013010543, -0.049071547, -0.049696773, 0.06359595, -0.023787443, -0.00805722, -0.06831382, -0.068399526, 0.05992723, -0.0013893984, 0.07338403, -0.04694255, 0.011136248, 0.0008038066, 0.0056001656, -0.053267557, 0.02105914, 0.037089206, -0.028758459, 0.041753717, -0.022313628, -0.061443612, 0.05293817, 0.05981383, 0.0015331252, 0.032820534, 0.0017179706, 0.03442954, 0.0568114, -0.08055023, 0.008218443, 0.043980658, 0.0107464725, -0.07045155, -0.051810738, -0.0039650016, -0.012614731, -0.051671688, -0.013362165, -0.058527417, -0.07102064, 0.038807526, -0.007335999, 0.022674477, -0.055646956, 0.00051333033, -0.03967009, 0.038859095, 0.048671816, -0.021219492, -0.019660875, -0.067207076, -0.027717466, -0.07776836, -0.016334293, -0.037560116, -0.012038204, -0.059560377, 0.05235457, 0.043513875, 0.01068574, -0.035644297, -0.008071788, 0.017653042, 0.084498495, 0.04909512, -0.03670082, 0.0064559956, -0.0074589695, 0.056157622, 0.0025820755, 0.003920461, -0.0062765246, 0.00034624062, -0.020866163, 0.047513857, -0.034365904, -0.001731549, -0.013832838, 0.024264129, -0.012487215, -0.0020622737, -0.018685948, 0.041883096, 0.06427122, 0.0016655591, -0.056768484, 0.009025188, -0.012156526, -0.035471603, -0.008056354, -0.013909139, -0.0017336692, -0.04120128, 0.030836046, 0.008218289, -0.099097006, -0.0132980365, 0.06266103, 0.012669199, 0.00079045334, 0.056454305, -0.022505356, -0.030944256, -0.007057944, -0.017656049, 0.031064367, 0.02376686, 0.06965635, -0.030532438, -0.0066893864, 0.044835392, -0.009557651, 0.011856021, 0.014054474, 0.05282666, 0.012465724, -0.0034489986, -0.0049821003, 0.019271545, 0.014140527, -0.037527706, 0.017616212, -0.017749347, 0.014994713, -0.0022879366, -0.031297043, -0.06230438, -0.008503517, 0.030092001, -0.023862941, -0.05614861, 0.04147236, 0.049740348, -0.014710407, 0.0029458434, 0.03387058, 0.060912665, 0.009372298, 0.049728174, 0.02271057, 0.0065417965, 0.09631355, 0.025524596, 0.023603661, 0.019426592, -0.010428368, -0.033062525, 0.032056615, -0.021088177, -0.009788532, -0.043748014, -0.020316686, -0.02042537, -0.024510557, 0.0020806093, -0.038777303, -0.03190617, -0.05355408, -0.04532367, 0.022136495, 0.0013588314, 0.05322672, -0.0666113, -0.055078663, -0.016575405, 0.0100008175, -0.017697686, -0.01178681, -0.016658153, -0.010829843, 0.017223045, 0.030719163, -0.033797093, -0.05071615, -0.0030295027, 0.011952366, -0.04866607, 0.005944206, 0.023571854, 0.013068973, 0.019026687, 0.010774696, 0.010494379, -0.024541976, -0.040106993, 0.0020648567, 0.0014040995, -0.013205625, 0.027067155, 0.032271214, -0.019279348, -0.007653687, -0.0013833777, -0.06151074, -0.06336644, -0.0049789306, 0.006277171, 0.045805912, -0.05653194, 0.013421987, -0.04894728, -0.039046306, -0.04424464, -0.02729429, 0.014641059, 0.025188664, 0.018217403, -0.0067579066, 0.009420879, 0.010900392, -0.028203115, -0.012748196, -0.01711079, 0.055650953, -0.0070212753, 0.0013459292, -0.004709172, 0.012821393, 0.02684617, 0.020822933, -0.082844466, 0.037010245, -0.018265605, 0.016557865, 0.015117236, -0.052236058, 0.03748002, -0.025910042, 0.015891246, -0.02748627, 0.01937544, 0.025378693, -0.014917108, -0.010528115, -0.041970845, 0.018269762, -0.002610855, 0.009472139, 0.012877478, 0.028869882, 0.030663995, -0.04695649, -0.054214697, -0.013526963, -0.016100653, -0.036634278, 0.00939484, 0.04957145, 0.019973524, -0.010636415, -0.02322462, -0.018677205, 0.03074061, 0.04389255, -0.03378335, 0.020991521, -0.01841485, 0.0024537693, -0.03726726, -0.01787645, -0.013908273, 0.009781809, -0.040776454, 0.07836277, -0.03423039, -0.015770815, 0.03665505, 0.026625859, -0.0072475425, 0.07473333, 0.036550835, -0.060395163, 0.0052984064, 0.01739927, -0.045662303, 0.014625231, -0.01132406, 0.0066899834, 0.025375158, -0.018624162, 0.0669167, -0.004576921, -0.042429004, 0.017977132, 0.011675602, 0.04993696, -0.011792409, -0.032113016, 0.016338024, 0.004826112, -0.068281725, 0.034527693, 0.019183366, -0.03580115, -0.008626375, -0.007856668, -0.059473805, 0.01675774, -0.014589134, -0.013284384, 0.0069396687, -0.0041939793, 0.028176265, 0.036991786, -0.04522107, 0.00051649206, -0.0151683595, 0.044357453, 0.019374194, 0.028095057, -0.0073359096, -0.02027258, -4.924203e-05, 0.05940717, -0.0002015059, -0.015264902, -0.0138625, 0.0315429, -0.027303873, 0.0056431917, 0.012990679, 0.016879888, 0.0070546884, 0.047343403, -0.008958512, -0.03551224, -0.019380564, -0.04781772, 0.03849253, 0.039730262, -0.0052885255, -0.029082198, 0.044249337, -0.041099053, -0.004403528, 0.007668614, 0.034635082, 0.046980146, 0.025586218, -0.051631168, 0.061289802, 0.007052951, 0.022879692, 0.026011158, -0.0062921, 0.024210408, -0.010791186, 0.028738722, 0.060309146, -0.026617592, -0.04084915, 0.054860488, -0.011396987, -0.017915092, 0.009489176, -0.0059099663, 0.015148583, 0.015886568, -0.006597743, 0.009290404, -0.09063146, 0.015235198, -0.037259262, -0.05432481, -0.023893649, 0.030681565, 0.020753387, -0.029547961, -0.012792041, 0.04396448, 0.03417958, 0.022844937, 0.035433464, 0.021762434, 0.023416221, -0.067189604, 0.014795521, 0.054653957, 0.05257101, 0.05785677, 0.058159724, 0.014259266, -0.04334941, -0.0555381, -0.00759924, 0.020184994, 0.062294703, -0.014530921, -0.040269796, -0.04426785, -0.0086279, -0.013844549, -0.02950409, -0.037623998, 0.0076031564, -0.012407423, -0.068744, -0.061240226, 0.0026469508, -0.0017918715, 0.00785784, 0.006359601, 0.0052497056, 0.04050421, 0.00749768, -0.065806024, -0.05844372, 0.01652419, -0.024597034, -0.06491808, 0.013254351, 0.004064673, -0.006514689, -0.05872459, -0.03563011, -0.061853703, -0.08739737, -0.044845816, 0.03590883, -0.0409411, 0.049724806, 0.02651289, -0.01361136, 0.026116563, 0.06047314, 0.0076963715, -0.0025448373, -0.0019268634, -0.025298323, 0.0053427736, -0.034633763, 0.0032959126, 0.004379711, -0.022121822, 0.016596632, 0.048904322, 0.0070737656, -0.010963451, -0.018502552, -0.01747472, -0.033506293, -0.0032809163, -0.013816288, -0.015475619, -0.0433848, -0.03706619, -0.058101267, 0.05832531, 0.040455014, -0.017578444, -0.012002969, -0.020302495, -0.019615235, 0.0023828968, -0.013819466, -0.03892699, -0.00035581933, -0.025876956, 0.052810065, 0.06150773, -0.03897351, -0.08909393, 0.019616146, -0.035840604, 0.013267275, -0.039735407, -0.0001438897, -0.017540835, 0.036749844, 0.004185826, -0.007745578, 0.0064876736, -0.034449346, -0.08337651, 0.018170163, -0.029420346, 0.01728275, -0.032509204, 0.002825273, 0.06717089, -0.0031851835, -0.048775956, 0.0013787259, -0.013508233, 0.0103769135, -0.03536961, 0.054937128, -0.04227489, -0.074537665, -0.030876836, -0.021491364, -0.015224977, 0.05820649, 0.030069988, -0.029605553, 0.002156331, -0.007705571, -0.012910053, -0.07419696, -0.03147038, -0.026440782, -0.0071553867, 0.03687322, -0.009132592, -0.004512167, 0.0017815373, -0.033794295, 0.008442156, 0.011754745, -0.04087552, -0.041988418, 0.0077363024, -0.028646179, 0.00939333, 0.09184455, -0.053260263, 0.0090279905]}\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "DOCUMENT1 = {\n",
        "    \"Título\": \"Operação do sistema de controle climático\",\n",
        "    \"Conteúdo\": \"O Googlecar tem um sistema de controle climático que permite ajustar a temperatura e o fluxo de ar no carro\"}\n",
        "DOCUMENT2 = {\n",
        "    \"Título\": \"Touchscreen\",\n",
        "    \"Conteúdo\": \"O seu Googlecar tem uma grande tela sensivel ao toque que oferece uma variedade de recursos\"}\n",
        "DOCUMENT3 = {\n",
        "    \"Título\": \"Mudança de marchas\",\n",
        "    \"Conteúdo\": \"O seu Googlecar tem um transmissão automatica, para trocar as marchas.\"}\n",
        "\n",
        "documents = [DOCUMENT1, DOCUMENT2, DOCUMENT3]"
      ],
      "metadata": {
        "id": "LxyngbvgiTrC"
      },
      "execution_count": 10,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df = pd.DataFrame(documents)\n",
        "df.columns = [\"Titulo\", \"Conteudo\"]\n",
        "df"
      ],
      "metadata": {
        "id": "ViVmeZgjnARx"
      },
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "model = \"models/embedding-001\"\n",
        "\n"
      ],
      "metadata": {
        "id": "dWzboHwko4iv"
      },
      "execution_count": 13,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "def embed_fn(title, text):\n",
        "  return genai.embed_content(model=model,\n",
        "                                 content=text,\n",
        "                                 title=title,\n",
        "                                 task_type=\"RETRIEVAL_DOCUMENT\")[\"embedding\"]"
      ],
      "metadata": {
        "id": "CrxyWivhtMKE"
      },
      "execution_count": 17,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df[\"Embeddings\"] = df.apply(lambda row: embed_fn(row[\"Titulo\"], row[\"Conteudo\"]), axis=1)\n",
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 143
        },
        "id": "m5iOlWhmvPk1",
        "outputId": "c491c74c-26fc-420a-f701-248717594271"
      },
      "execution_count": 20,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                      Titulo  \\\n",
              "0  Operação do sistema de controle climático   \n",
              "1                                Touchscreen   \n",
              "2                         Mudança de marchas   \n",
              "\n",
              "                                            Conteudo  \\\n",
              "0  O Googlecar tem um sistema de controle climáti...   \n",
              "1  O seu Googlecar tem uma grande tela sensivel a...   \n",
              "2  O seu Googlecar tem um transmissão automatica,...   \n",
              "\n",
              "                                          Embeddings  \n",
              "0  [-0.010975448, -0.01996048, -0.061239038, 0.04...  \n",
              "1  [0.012344038, -0.044285268, -0.02023872, -0.01...  \n",
              "2  [-0.0023861278, -0.03863171, -0.020738365, 0.0...  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-85730cf5-aae3-40c8-be6f-d85573d28f66\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Titulo</th>\n",
              "      <th>Conteudo</th>\n",
              "      <th>Embeddings</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Operação do sistema de controle climático</td>\n",
              "      <td>O Googlecar tem um sistema de controle climáti...</td>\n",
              "      <td>[-0.010975448, -0.01996048, -0.061239038, 0.04...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Touchscreen</td>\n",
              "      <td>O seu Googlecar tem uma grande tela sensivel a...</td>\n",
              "      <td>[0.012344038, -0.044285268, -0.02023872, -0.01...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Mudança de marchas</td>\n",
              "      <td>O seu Googlecar tem um transmissão automatica,...</td>\n",
              "      <td>[-0.0023861278, -0.03863171, -0.020738365, 0.0...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-85730cf5-aae3-40c8-be6f-d85573d28f66')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-85730cf5-aae3-40c8-be6f-d85573d28f66 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-85730cf5-aae3-40c8-be6f-d85573d28f66');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-61820711-6549-449e-8956-52f4759baaf2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-61820711-6549-449e-8956-52f4759baaf2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-61820711-6549-449e-8956-52f4759baaf2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "\n",
              "  <div id=\"id_8282e7a3-b13c-4f84-80f3-64d02ff64631\">\n",
              "    <style>\n",
              "      .colab-df-generate {\n",
              "        background-color: #E8F0FE;\n",
              "        border: none;\n",
              "        border-radius: 50%;\n",
              "        cursor: pointer;\n",
              "        display: none;\n",
              "        fill: #1967D2;\n",
              "        height: 32px;\n",
              "        padding: 0 0 0 0;\n",
              "        width: 32px;\n",
              "      }\n",
              "\n",
              "      .colab-df-generate:hover {\n",
              "        background-color: #E2EBFA;\n",
              "        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "        fill: #174EA6;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate {\n",
              "        background-color: #3B4455;\n",
              "        fill: #D2E3FC;\n",
              "      }\n",
              "\n",
              "      [theme=dark] .colab-df-generate:hover {\n",
              "        background-color: #434B5C;\n",
              "        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "        fill: #FFFFFF;\n",
              "      }\n",
              "    </style>\n",
              "    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('df')\"\n",
              "            title=\"Generate code using this dataframe.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "    <script>\n",
              "      (() => {\n",
              "      const buttonEl =\n",
              "        document.querySelector('#id_8282e7a3-b13c-4f84-80f3-64d02ff64631 button.colab-df-generate');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      buttonEl.onclick = () => {\n",
              "        google.colab.notebook.generateWithVariable('df');\n",
              "      }\n",
              "      })();\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df",
              "summary": "{\n  \"name\": \"df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Titulo\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"Opera\\u00e7\\u00e3o do sistema de controle clim\\u00e1tico\",\n          \"Touchscreen\",\n          \"Mudan\\u00e7a de marchas\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Conteudo\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 3,\n        \"samples\": [\n          \"O Googlecar tem um sistema de controle clim\\u00e1tico que permite ajustar a temperatura e o fluxo de ar no carro\",\n          \"O seu Googlecar tem uma grande tela sensivel ao toque que oferece uma variedade de recursos\",\n          \"O seu Googlecar tem um transmiss\\u00e3o automatica, para trocar as marchas.\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Embeddings\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 20
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "def gerar_e_buscar_consulta(consulta, base, model):\n",
        "  embedding_da_consulta = genai.embed_content(model=model,\n",
        "                                 content=consulta,\n",
        "                                 task_type=\"RETRIEVAL_QUERY\")[\"embedding\"]\n",
        "\n",
        "  produtos_escalares = np.dot(np.stack(df[\"Embeddings\"]), embedding_da_consulta)\n",
        "\n",
        "  indice = np.argmax(produtos_escalares)\n",
        "  return df.iloc[indice][\"Conteudo\"]\n",
        "\n"
      ],
      "metadata": {
        "id": "wCYjnHpDxUeL"
      },
      "execution_count": 23,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "consulta = \"O carro do Google tem algum controle de ar?\"\n",
        "\n",
        "\n",
        "trecho = gerar_e_buscar_consulta(consulta, df, model)\n",
        "print(trecho)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "id": "CwzkpHaw0s2C",
        "outputId": "44959091-b752-44b0-bcef-7f4dad813147"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O Googlecar tem um sistema de controle climático que permite ajustar a temperatura e o fluxo de ar no carro\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "generation_config = {\n",
        "    \"temperature\": 0,\n",
        "    \"candidate_count\": 1,\n",
        "}"
      ],
      "metadata": {
        "id": "Z0bHsSSu4sKI"
      },
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "prompt = f\"Reescreva esse texto de uma forma mais descontraída, sem adicionar informações que não façam parte do texto: {trecho}\"\n",
        "\n",
        "model_2 = genai.GenerativeModel(\"gemini-1.0-pro\",\n",
        "                                generation_config=generation_config)\n",
        "response = model_2.generate_content(prompt)\n",
        "print(response.text)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 34
        },
        "id": "uXZEo_BI3tqw",
        "outputId": "937821b6-1898-4655-de68-b5c3a80a473f"
      },
      "execution_count": 38,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "O Googlecar é tipo um táxi do futuro, e ele tem um ar-condicionado maneiro que deixa o carro na temperatura perfeita, tipo um dia de praia em pleno inverno!\n"
          ]
        }
      ]
    }
  ]
}